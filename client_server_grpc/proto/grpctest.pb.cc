// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpctest.proto

#include "grpctest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace GRPCTestApi {
class GetTimeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTimeRequest>
      _instance;
} _GetTimeRequest_default_instance_;
class GetTimeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTimeResponse>
      _instance;
} _GetTimeResponse_default_instance_;
class GetServerNameRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServerNameRequest>
      _instance;
} _GetServerNameRequest_default_instance_;
class GetServerNameResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServerNameResponse>
      _instance;
} _GetServerNameResponse_default_instance_;
class ConvertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvertRequest>
      _instance;
} _ConvertRequest_default_instance_;
class ConvertResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvertResponse>
      _instance;
} _ConvertResponse_default_instance_;
}  // namespace GRPCTestApi
namespace protobuf_grpctest_2eproto {
void InitDefaultsGetTimeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GRPCTestApi::_GetTimeRequest_default_instance_;
    new (ptr) ::GRPCTestApi::GetTimeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GRPCTestApi::GetTimeRequest::InitAsDefaultInstance();
}

void InitDefaultsGetTimeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetTimeRequestImpl);
}

void InitDefaultsGetTimeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GRPCTestApi::_GetTimeResponse_default_instance_;
    new (ptr) ::GRPCTestApi::GetTimeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GRPCTestApi::GetTimeResponse::InitAsDefaultInstance();
}

void InitDefaultsGetTimeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetTimeResponseImpl);
}

void InitDefaultsGetServerNameRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GRPCTestApi::_GetServerNameRequest_default_instance_;
    new (ptr) ::GRPCTestApi::GetServerNameRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GRPCTestApi::GetServerNameRequest::InitAsDefaultInstance();
}

void InitDefaultsGetServerNameRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServerNameRequestImpl);
}

void InitDefaultsGetServerNameResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GRPCTestApi::_GetServerNameResponse_default_instance_;
    new (ptr) ::GRPCTestApi::GetServerNameResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GRPCTestApi::GetServerNameResponse::InitAsDefaultInstance();
}

void InitDefaultsGetServerNameResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetServerNameResponseImpl);
}

void InitDefaultsConvertRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GRPCTestApi::_ConvertRequest_default_instance_;
    new (ptr) ::GRPCTestApi::ConvertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GRPCTestApi::ConvertRequest::InitAsDefaultInstance();
}

void InitDefaultsConvertRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConvertRequestImpl);
}

void InitDefaultsConvertResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::GRPCTestApi::_ConvertResponse_default_instance_;
    new (ptr) ::GRPCTestApi::ConvertResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GRPCTestApi::ConvertResponse::InitAsDefaultInstance();
}

void InitDefaultsConvertResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConvertResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetTimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetTimeRequest, currenttime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetTimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetTimeResponse, currenttime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetServerNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetServerNameRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetServerNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::GetServerNameResponse, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::ConvertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::ConvertRequest, conv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::ConvertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GRPCTestApi::ConvertResponse, conv_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GRPCTestApi::GetTimeRequest)},
  { 6, -1, sizeof(::GRPCTestApi::GetTimeResponse)},
  { 12, -1, sizeof(::GRPCTestApi::GetServerNameRequest)},
  { 18, -1, sizeof(::GRPCTestApi::GetServerNameResponse)},
  { 24, -1, sizeof(::GRPCTestApi::ConvertRequest)},
  { 30, -1, sizeof(::GRPCTestApi::ConvertResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::GRPCTestApi::_GetTimeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GRPCTestApi::_GetTimeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GRPCTestApi::_GetServerNameRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GRPCTestApi::_GetServerNameResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GRPCTestApi::_ConvertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GRPCTestApi::_ConvertResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "grpctest.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016grpctest.proto\022\013GRPCTestApi\"%\n\016GetTime"
      "Request\022\023\n\013currenttime\030\001 \001(\t\"&\n\017GetTimeR"
      "esponse\022\023\n\013currenttime\030\001 \001(\t\"$\n\024GetServe"
      "rNameRequest\022\014\n\004name\030\001 \001(\t\"%\n\025GetServerN"
      "ameResponse\022\014\n\004name\030\001 \001(\t\"\036\n\016ConvertRequ"
      "est\022\014\n\004conv\030\001 \001(\t\"\037\n\017ConvertResponse\022\014\n\004"
      "conv\030\001 \001(\t2\372\001\n\016GRPCTestApiSrv\022F\n\007GetTime"
      "\022\033.GRPCTestApi.GetTimeRequest\032\034.GRPCTest"
      "Api.GetTimeResponse\"\000\022X\n\rGetServerName\022!"
      ".GRPCTestApi.GetServerNameRequest\032\".GRPC"
      "TestApi.GetServerNameResponse\"\000\022F\n\007Conve"
      "rt\022\033.GRPCTestApi.ConvertRequest\032\034.GRPCTe"
      "stApi.ConvertResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 511);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grpctest.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_grpctest_2eproto
namespace GRPCTestApi {

// ===================================================================

void GetTimeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTimeRequest::kCurrenttimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTimeRequest::GetTimeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_grpctest_2eproto::InitDefaultsGetTimeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GRPCTestApi.GetTimeRequest)
}
GetTimeRequest::GetTimeRequest(const GetTimeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currenttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currenttime().size() > 0) {
    currenttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currenttime_);
  }
  // @@protoc_insertion_point(copy_constructor:GRPCTestApi.GetTimeRequest)
}

void GetTimeRequest::SharedCtor() {
  currenttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetTimeRequest::~GetTimeRequest() {
  // @@protoc_insertion_point(destructor:GRPCTestApi.GetTimeRequest)
  SharedDtor();
}

void GetTimeRequest::SharedDtor() {
  currenttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTimeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTimeRequest::descriptor() {
  ::protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTimeRequest& GetTimeRequest::default_instance() {
  ::protobuf_grpctest_2eproto::InitDefaultsGetTimeRequest();
  return *internal_default_instance();
}

GetTimeRequest* GetTimeRequest::New(::google::protobuf::Arena* arena) const {
  GetTimeRequest* n = new GetTimeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GRPCTestApi.GetTimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currenttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetTimeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GRPCTestApi.GetTimeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string currenttime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currenttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currenttime().data(), static_cast<int>(this->currenttime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GRPCTestApi.GetTimeRequest.currenttime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GRPCTestApi.GetTimeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GRPCTestApi.GetTimeRequest)
  return false;
#undef DO_
}

void GetTimeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GRPCTestApi.GetTimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string currenttime = 1;
  if (this->currenttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currenttime().data(), static_cast<int>(this->currenttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetTimeRequest.currenttime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->currenttime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GRPCTestApi.GetTimeRequest)
}

::google::protobuf::uint8* GetTimeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GRPCTestApi.GetTimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string currenttime = 1;
  if (this->currenttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currenttime().data(), static_cast<int>(this->currenttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetTimeRequest.currenttime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->currenttime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GRPCTestApi.GetTimeRequest)
  return target;
}

size_t GetTimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GRPCTestApi.GetTimeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string currenttime = 1;
  if (this->currenttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currenttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTimeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GRPCTestApi.GetTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTimeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTimeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GRPCTestApi.GetTimeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GRPCTestApi.GetTimeRequest)
    MergeFrom(*source);
  }
}

void GetTimeRequest::MergeFrom(const GetTimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GRPCTestApi.GetTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currenttime().size() > 0) {

    currenttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currenttime_);
  }
}

void GetTimeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GRPCTestApi.GetTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTimeRequest::CopyFrom(const GetTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GRPCTestApi.GetTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTimeRequest::IsInitialized() const {
  return true;
}

void GetTimeRequest::Swap(GetTimeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTimeRequest::InternalSwap(GetTimeRequest* other) {
  using std::swap;
  currenttime_.Swap(&other->currenttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTimeRequest::GetMetadata() const {
  protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTimeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTimeResponse::kCurrenttimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTimeResponse::GetTimeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_grpctest_2eproto::InitDefaultsGetTimeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GRPCTestApi.GetTimeResponse)
}
GetTimeResponse::GetTimeResponse(const GetTimeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currenttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currenttime().size() > 0) {
    currenttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currenttime_);
  }
  // @@protoc_insertion_point(copy_constructor:GRPCTestApi.GetTimeResponse)
}

void GetTimeResponse::SharedCtor() {
  currenttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetTimeResponse::~GetTimeResponse() {
  // @@protoc_insertion_point(destructor:GRPCTestApi.GetTimeResponse)
  SharedDtor();
}

void GetTimeResponse::SharedDtor() {
  currenttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTimeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTimeResponse::descriptor() {
  ::protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTimeResponse& GetTimeResponse::default_instance() {
  ::protobuf_grpctest_2eproto::InitDefaultsGetTimeResponse();
  return *internal_default_instance();
}

GetTimeResponse* GetTimeResponse::New(::google::protobuf::Arena* arena) const {
  GetTimeResponse* n = new GetTimeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GRPCTestApi.GetTimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currenttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetTimeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GRPCTestApi.GetTimeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string currenttime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currenttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currenttime().data(), static_cast<int>(this->currenttime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GRPCTestApi.GetTimeResponse.currenttime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GRPCTestApi.GetTimeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GRPCTestApi.GetTimeResponse)
  return false;
#undef DO_
}

void GetTimeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GRPCTestApi.GetTimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string currenttime = 1;
  if (this->currenttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currenttime().data(), static_cast<int>(this->currenttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetTimeResponse.currenttime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->currenttime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GRPCTestApi.GetTimeResponse)
}

::google::protobuf::uint8* GetTimeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GRPCTestApi.GetTimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string currenttime = 1;
  if (this->currenttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currenttime().data(), static_cast<int>(this->currenttime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetTimeResponse.currenttime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->currenttime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GRPCTestApi.GetTimeResponse)
  return target;
}

size_t GetTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GRPCTestApi.GetTimeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string currenttime = 1;
  if (this->currenttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currenttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTimeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GRPCTestApi.GetTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTimeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTimeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GRPCTestApi.GetTimeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GRPCTestApi.GetTimeResponse)
    MergeFrom(*source);
  }
}

void GetTimeResponse::MergeFrom(const GetTimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GRPCTestApi.GetTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currenttime().size() > 0) {

    currenttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currenttime_);
  }
}

void GetTimeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GRPCTestApi.GetTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTimeResponse::CopyFrom(const GetTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GRPCTestApi.GetTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTimeResponse::IsInitialized() const {
  return true;
}

void GetTimeResponse::Swap(GetTimeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTimeResponse::InternalSwap(GetTimeResponse* other) {
  using std::swap;
  currenttime_.Swap(&other->currenttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTimeResponse::GetMetadata() const {
  protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServerNameRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServerNameRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServerNameRequest::GetServerNameRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_grpctest_2eproto::InitDefaultsGetServerNameRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GRPCTestApi.GetServerNameRequest)
}
GetServerNameRequest::GetServerNameRequest(const GetServerNameRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:GRPCTestApi.GetServerNameRequest)
}

void GetServerNameRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetServerNameRequest::~GetServerNameRequest() {
  // @@protoc_insertion_point(destructor:GRPCTestApi.GetServerNameRequest)
  SharedDtor();
}

void GetServerNameRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServerNameRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServerNameRequest::descriptor() {
  ::protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServerNameRequest& GetServerNameRequest::default_instance() {
  ::protobuf_grpctest_2eproto::InitDefaultsGetServerNameRequest();
  return *internal_default_instance();
}

GetServerNameRequest* GetServerNameRequest::New(::google::protobuf::Arena* arena) const {
  GetServerNameRequest* n = new GetServerNameRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServerNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GRPCTestApi.GetServerNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServerNameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GRPCTestApi.GetServerNameRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GRPCTestApi.GetServerNameRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GRPCTestApi.GetServerNameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GRPCTestApi.GetServerNameRequest)
  return false;
#undef DO_
}

void GetServerNameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GRPCTestApi.GetServerNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetServerNameRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GRPCTestApi.GetServerNameRequest)
}

::google::protobuf::uint8* GetServerNameRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GRPCTestApi.GetServerNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetServerNameRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GRPCTestApi.GetServerNameRequest)
  return target;
}

size_t GetServerNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GRPCTestApi.GetServerNameRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServerNameRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GRPCTestApi.GetServerNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServerNameRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServerNameRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GRPCTestApi.GetServerNameRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GRPCTestApi.GetServerNameRequest)
    MergeFrom(*source);
  }
}

void GetServerNameRequest::MergeFrom(const GetServerNameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GRPCTestApi.GetServerNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetServerNameRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GRPCTestApi.GetServerNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServerNameRequest::CopyFrom(const GetServerNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GRPCTestApi.GetServerNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServerNameRequest::IsInitialized() const {
  return true;
}

void GetServerNameRequest::Swap(GetServerNameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServerNameRequest::InternalSwap(GetServerNameRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServerNameRequest::GetMetadata() const {
  protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServerNameResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServerNameResponse::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServerNameResponse::GetServerNameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_grpctest_2eproto::InitDefaultsGetServerNameResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GRPCTestApi.GetServerNameResponse)
}
GetServerNameResponse::GetServerNameResponse(const GetServerNameResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:GRPCTestApi.GetServerNameResponse)
}

void GetServerNameResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetServerNameResponse::~GetServerNameResponse() {
  // @@protoc_insertion_point(destructor:GRPCTestApi.GetServerNameResponse)
  SharedDtor();
}

void GetServerNameResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServerNameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServerNameResponse::descriptor() {
  ::protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServerNameResponse& GetServerNameResponse::default_instance() {
  ::protobuf_grpctest_2eproto::InitDefaultsGetServerNameResponse();
  return *internal_default_instance();
}

GetServerNameResponse* GetServerNameResponse::New(::google::protobuf::Arena* arena) const {
  GetServerNameResponse* n = new GetServerNameResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServerNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GRPCTestApi.GetServerNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServerNameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GRPCTestApi.GetServerNameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GRPCTestApi.GetServerNameResponse.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GRPCTestApi.GetServerNameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GRPCTestApi.GetServerNameResponse)
  return false;
#undef DO_
}

void GetServerNameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GRPCTestApi.GetServerNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetServerNameResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GRPCTestApi.GetServerNameResponse)
}

::google::protobuf::uint8* GetServerNameResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GRPCTestApi.GetServerNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.GetServerNameResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GRPCTestApi.GetServerNameResponse)
  return target;
}

size_t GetServerNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GRPCTestApi.GetServerNameResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServerNameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GRPCTestApi.GetServerNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServerNameResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServerNameResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GRPCTestApi.GetServerNameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GRPCTestApi.GetServerNameResponse)
    MergeFrom(*source);
  }
}

void GetServerNameResponse::MergeFrom(const GetServerNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GRPCTestApi.GetServerNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetServerNameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GRPCTestApi.GetServerNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServerNameResponse::CopyFrom(const GetServerNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GRPCTestApi.GetServerNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServerNameResponse::IsInitialized() const {
  return true;
}

void GetServerNameResponse::Swap(GetServerNameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServerNameResponse::InternalSwap(GetServerNameResponse* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServerNameResponse::GetMetadata() const {
  protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConvertRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvertRequest::kConvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvertRequest::ConvertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_grpctest_2eproto::InitDefaultsConvertRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GRPCTestApi.ConvertRequest)
}
ConvertRequest::ConvertRequest(const ConvertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conv().size() > 0) {
    conv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_);
  }
  // @@protoc_insertion_point(copy_constructor:GRPCTestApi.ConvertRequest)
}

void ConvertRequest::SharedCtor() {
  conv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConvertRequest::~ConvertRequest() {
  // @@protoc_insertion_point(destructor:GRPCTestApi.ConvertRequest)
  SharedDtor();
}

void ConvertRequest::SharedDtor() {
  conv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConvertRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConvertRequest::descriptor() {
  ::protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvertRequest& ConvertRequest::default_instance() {
  ::protobuf_grpctest_2eproto::InitDefaultsConvertRequest();
  return *internal_default_instance();
}

ConvertRequest* ConvertRequest::New(::google::protobuf::Arena* arena) const {
  ConvertRequest* n = new ConvertRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConvertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GRPCTestApi.ConvertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConvertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GRPCTestApi.ConvertRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string conv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->conv().data(), static_cast<int>(this->conv().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GRPCTestApi.ConvertRequest.conv"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GRPCTestApi.ConvertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GRPCTestApi.ConvertRequest)
  return false;
#undef DO_
}

void ConvertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GRPCTestApi.ConvertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string conv = 1;
  if (this->conv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conv().data(), static_cast<int>(this->conv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.ConvertRequest.conv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->conv(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GRPCTestApi.ConvertRequest)
}

::google::protobuf::uint8* ConvertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GRPCTestApi.ConvertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string conv = 1;
  if (this->conv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conv().data(), static_cast<int>(this->conv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.ConvertRequest.conv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->conv(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GRPCTestApi.ConvertRequest)
  return target;
}

size_t ConvertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GRPCTestApi.ConvertRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string conv = 1;
  if (this->conv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->conv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConvertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GRPCTestApi.ConvertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GRPCTestApi.ConvertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GRPCTestApi.ConvertRequest)
    MergeFrom(*source);
  }
}

void ConvertRequest::MergeFrom(const ConvertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GRPCTestApi.ConvertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conv().size() > 0) {

    conv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_);
  }
}

void ConvertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GRPCTestApi.ConvertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvertRequest::CopyFrom(const ConvertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GRPCTestApi.ConvertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvertRequest::IsInitialized() const {
  return true;
}

void ConvertRequest::Swap(ConvertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvertRequest::InternalSwap(ConvertRequest* other) {
  using std::swap;
  conv_.Swap(&other->conv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConvertRequest::GetMetadata() const {
  protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConvertResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvertResponse::kConvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvertResponse::ConvertResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_grpctest_2eproto::InitDefaultsConvertResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GRPCTestApi.ConvertResponse)
}
ConvertResponse::ConvertResponse(const ConvertResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conv().size() > 0) {
    conv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_);
  }
  // @@protoc_insertion_point(copy_constructor:GRPCTestApi.ConvertResponse)
}

void ConvertResponse::SharedCtor() {
  conv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConvertResponse::~ConvertResponse() {
  // @@protoc_insertion_point(destructor:GRPCTestApi.ConvertResponse)
  SharedDtor();
}

void ConvertResponse::SharedDtor() {
  conv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConvertResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConvertResponse::descriptor() {
  ::protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvertResponse& ConvertResponse::default_instance() {
  ::protobuf_grpctest_2eproto::InitDefaultsConvertResponse();
  return *internal_default_instance();
}

ConvertResponse* ConvertResponse::New(::google::protobuf::Arena* arena) const {
  ConvertResponse* n = new ConvertResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConvertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GRPCTestApi.ConvertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConvertResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GRPCTestApi.ConvertResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string conv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->conv().data(), static_cast<int>(this->conv().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GRPCTestApi.ConvertResponse.conv"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GRPCTestApi.ConvertResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GRPCTestApi.ConvertResponse)
  return false;
#undef DO_
}

void ConvertResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GRPCTestApi.ConvertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string conv = 1;
  if (this->conv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conv().data(), static_cast<int>(this->conv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.ConvertResponse.conv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->conv(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GRPCTestApi.ConvertResponse)
}

::google::protobuf::uint8* ConvertResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GRPCTestApi.ConvertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string conv = 1;
  if (this->conv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conv().data(), static_cast<int>(this->conv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GRPCTestApi.ConvertResponse.conv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->conv(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GRPCTestApi.ConvertResponse)
  return target;
}

size_t ConvertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GRPCTestApi.ConvertResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string conv = 1;
  if (this->conv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->conv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConvertResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GRPCTestApi.ConvertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvertResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvertResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GRPCTestApi.ConvertResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GRPCTestApi.ConvertResponse)
    MergeFrom(*source);
  }
}

void ConvertResponse::MergeFrom(const ConvertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GRPCTestApi.ConvertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conv().size() > 0) {

    conv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_);
  }
}

void ConvertResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GRPCTestApi.ConvertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvertResponse::CopyFrom(const ConvertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GRPCTestApi.ConvertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvertResponse::IsInitialized() const {
  return true;
}

void ConvertResponse::Swap(ConvertResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvertResponse::InternalSwap(ConvertResponse* other) {
  using std::swap;
  conv_.Swap(&other->conv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConvertResponse::GetMetadata() const {
  protobuf_grpctest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpctest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace GRPCTestApi

// @@protoc_insertion_point(global_scope)
